import React, { useState } from 'react';

function App() {
  // 1. State for the counter.
  // 'count' is the state variable, 'setCount' is the function to update it.
  const [count, setCount] = useState(0);

  // 2. State for the text input.
  // 'text' is the state variable, 'setText' is the function to update it.
  const [text, setText] = useState('');

  // Handler function to increment the counter.
  const handleIncrement = () => {
    setCount(prevCount => prevCount + 1);
  };

  // Handler function to decrement the counter.
  const handleDecrement = () => {
    setCount(prevCount => prevCount - 1);
  };

  // Handler function to update the text state on every keystroke.
  const handleTextChange = (e) => {
    setText(e.target.value);
  };

  return (
    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif', maxWidth: '800px', margin: 'auto' }}>
      <h1>Day 7: State Management with `useState`</h1>
      <p>This application demonstrates how to use the `useState` hook to manage two different pieces of state within a single component: a numeric counter and a string for a live text preview.</p>
      <hr />

      {/* Counter Section */}
      <div style={{ marginBottom: '40px', textAlign: 'center', border: '1px solid #ccc', padding: '20px', borderRadius: '8px' }}>
        <h2>Counter</h2>
        <p style={{ fontSize: '32px', fontWeight: 'bold', margin: '10px 0' }}>{count}</p>
        <div style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>
          <button
            onClick={handleIncrement}
            style={{ padding: '10px 20px', fontSize: '18px', cursor: 'pointer', border: '1px solid #4CAF50', backgroundColor: '#e8f5e9', color: '#4CAF50', borderRadius: '4px' }}
          >
            Increment
          </button>
          <button
            onClick={handleDecrement}
            style={{ padding: '10px 20px', fontSize: '18px', cursor: 'pointer', border: '1px solid #f44336', backgroundColor: '#ffebee', color: '#f44336', borderRadius: '4px' }}
          >
            Decrement
          </button>
        </div>
      </div>
      <hr />

      {/* Live Text Preview Section */}
      <div style={{ textAlign: 'center', border: '1px solid #ccc', padding: '20px', borderRadius: '8px' }}>
        <h2>Live Text Preview</h2>
        <input
          type="text"
          placeholder="Type something..."
          value={text}
          onChange={handleTextChange}
          style={{ padding: '10px', fontSize: '16px', width: '80%', margin: '10px 0', border: '1px solid #ddd', borderRadius: '4px' }}
        />
        <p style={{ fontSize: '18px', marginTop: '20px', minHeight: '22px' }}>
          <strong>Preview:</strong> {text}
        </p>
      </div>
    </div>
  );
}

export default App;
