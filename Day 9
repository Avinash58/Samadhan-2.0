import React, { useState, useEffect } from 'react';

function StudentList() {
  // 1. Set up state to hold the data, loading status, and any errors
  const [students, setStudents] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // 2. Use useEffect to perform the fetch operation on component mount
  useEffect(() => {
    // Define an async function to use await
    const fetchStudents = async () => {
      try {
        const response = await fetch('/api/students'); // Your API endpoint
        
        // Check if the network response was successful
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        
        const data = await response.json();
        
        // 3. Update state with the fetched data
        setStudents(data);
      } catch (err) {
        // If an error occurs, update the error state
        setError(err.message);
      } finally {
        // 4. Set loading to false after the fetch is complete
        setLoading(false);
      }
    };

    fetchStudents(); // Execute the fetch function

  }, []); // The empty array [] ensures this effect runs only once

  // 5. Conditionally render UI based on the current state
  if (loading) {
    return <div>Loading students... ⏳</div>;
  }

  if (error) {
    return <div>Error: {error} 😞</div>;
  }

  return (
    <div>
      <h1>Student Roster</h1>
      <ul>
        {students.map(student => (
          <li key={student.id}>
            <strong>{student.name}</strong> - {student.course}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default StudentList;
